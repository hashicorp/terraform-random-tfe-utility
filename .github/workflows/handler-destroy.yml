name: Pull Request Destroy Handler

on:
  repository_dispatch:
    types:
      - destroy-command

jobs:
  azure_public_active_active:
    uses: ./.github/workflows/azure-destroy.yml
    secrets: inherit
    name: Destroy resources from Azure Public Active/Active
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'azure-public-active-active') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-azure')}}
    with:
      test_name: Public Active/Active
      utility_test: true
      module_repository_id: hashicorp/terraform-azurerm-terraform-enterprise
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      work_dir: ./tests/public-active-active
      TFC_token_secret_name: UTILITY_AZURE_PUBLIC_ACTIVE_ACTIVE_TFC_TOKEN
      TFC_workspace_substitution_pattern: s/azure-public-active-active/utility-azure-public-active-active/
  azure_private_active_active:
    uses: ./.github/workflows/azure-destroy.yml
    secrets: inherit
    name: Destroy resources from Azure Private Active/Active
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'azure-private-active-active') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-azure')}}
    with:
      test_name: Private Active/Active
      utility_test: true
      module_repository_id: hashicorp/terraform-azurerm-terraform-enterprise
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      work_dir: ./tests/private-active-active
      TFC_token_secret_name: UTILITY_AZURE_PRIVATE_ACTIVE_ACTIVE_TFC_TOKEN
      TFC_workspace_substitution_pattern: s/azure-private-active-active/utility-azure-private-active-active/
  azure_private_tcp_active_active:
    uses: ./.github/workflows/azure-destroy.yml
    secrets: inherit
    name: Destroy resources from Azure Private TCP Active/Active
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'azure-private-tcp-active-active') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-azure')}}
    with:
      test_name: Private TCP Active/Active
      utility_test: true
      module_repository_id: hashicorp/terraform-azurerm-terraform-enterprise
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      work_dir: ./tests/private-tcp-active-active
      TFC_token_secret_name: UTILITY_AZURE_PRIVATE_TCP_ACTIVE_ACTIVE_TFC_TOKEN
      TFC_workspace_substitution_pattern: s/azure-private-tcp-active-active/utility-azure-private-tcp-active-active/
  azure_standalone_external:
    uses: ./.github/workflows/azure-destroy.yml
    secrets: inherit
    name: Destroy resources from Azure Standalone External
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'azure-standalone-external') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-azure')}}
    with:
      test_name: Standalone External
      utility_test: true
      module_repository_id: hashicorp/terraform-azurerm-terraform-enterprise
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      work_dir: ./tests/standalone-external
      TFC_token_secret_name: UTILITY_AZURE_STANDALONE_EXTERNAL_TFC_TOKEN
      TFC_workspace_substitution_pattern: 's/terraform {/terraform {\n\
        backend "remote" {\n\
          organization = "terraform-enterprise-modules-test"\n\
          workspaces {\n\
            name = "utility-azure-standalone-external"\n\
          }\n\
        }\n/'
  azure_standalone_mounted_disk:
    uses: ./.github/workflows/azure-destroy.yml
    secrets: inherit
    name: Destroy resources from Azure Standalone Mounted Disk
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'azure-standalone-mounted-disk') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-azure')}}
    with:
      test_name: Standalone Mounted Disk
      utility_test: true
      module_repository_id: hashicorp/terraform-azurerm-terraform-enterprise
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      work_dir: ./tests/standalone-mounted-disk
      TFC_token_secret_name: UTILITY_AZURE_STANDALONE_MOUNTED_DISK_TFC_TOKEN
      TFC_workspace_substitution_pattern: 's/terraform {/terraform {\n\
        backend "remote" {\n\
          organization = "terraform-enterprise-modules-test"\n\
          workspaces {\n\
            name = "utility-azure-standalone-mounted-disk"\n\
          }\n\
        }\n/'
  
  google_public_active_active:
    uses: ./.github/workflows/google-destroy.yml
    secrets: inherit
    name: Destroy resources from Google Public Active/Active
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'google-public-active-active') }}
    with:
      test_name: Google Public Active/Active
      module_repository_id: hashicorp/terraform-google-terraform-enterprise
      work_dir: ./tests/public-active-active
      utility_test: true
      create_backend: false
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      TFC_token_secret_name: UTILITY_GOOGLE_PUBLIC_ACTIVE_ACTIVE_TFC_TOKEN
      TFC_workspace_substitution_pattern: s/google-public-active-active/utility-google-public-active-active/
      TFC_workspace: utility-google-public-active-active
  
  google_private_active_active:
    uses: ./.github/workflows/google-destroy.yml
    secrets: inherit
    name: Destroy resources from Google Private Active/Active
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'google-private-active-active') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-google')}}
    with:
      test_name: Google Private Active/Active
      utility_test: true
      create_backend: false
      module_repository_id: hashicorp/terraform-google-terraform-enterprise
      work_dir: ./tests/private-active-active
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      TFC_token_secret_name: UTILITY_GOOGLE_PRIVATE_ACTIVE_ACTIVE_TFC_TOKEN
      TFC_workspace_substitution_pattern: s/google-private-active-active/utility-google-private-active-active/
      TFC_workspace: utility-google-private-active-active

  google_private_tcp_active_active:
    uses: ./.github/workflows/google-destroy.yml
    secrets: inherit
    name: Destroy resources from Google Private TCP Active/Active
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'google-private-tcp-active-active') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-google')}}
    with:
      test_name: Google Private TCP Active/Active
      utility_test: true
      create_backend: false
      module_repository_id: hashicorp/terraform-google-terraform-enterprise
      work_dir: ./tests/private-tcp-active-active
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      TFC_token_secret_name: UTILITY_GOOGLE_PRIVATE_TCP_ACTIVE_ACTIVE_TFC_TOKEN
      TFC_workspace_substitution_pattern: s/google-private-tcp-active-active/utility-google-private-tcp-active-active/
      TFC_workspace: utility-google-private-tcp-active-active

  google_standalone_external_rhel8_worker:
    uses: ./.github/workflows/google-destroy.yml
    secrets: inherit
    name: Destroy resources from Google Standalone External Rhel8 Worker
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'standalone-external-rhel8-worker') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-google')}}
    with:
      test_name: Google Standalone External Rhel8 Worker
      module_repository_id: hashicorp/terraform-google-terraform-enterprise
      work_dir: ./tests/standalone-external-rhel8-worker
      utility_test: true
      create_backend: true
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      TFC_token_secret_name: UTILITY_STANDALONE_EXTERNAL_RHEL8_WORKER_TFC_TOKEN
      TFC_workspace_substitution_pattern: s/google-standalone-external-rhel8-worker/utility-google-standalone-external-rhel8-worker/
      TFC_workspace: utility-google-standalone-external-rhel8-worker

  google_standalone_mounted_disk:
    uses: ./.github/workflows/google-destroy.yml
    secrets: inherit
    name: Destroy resources from Google Standalone Mounted Disk
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'google-standalone-mounted-disk') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-google')}}
    with:
      test_name: Google Standalone Mounted Disk
      module_repository_id: hashicorp/terraform-google-terraform-enterprise
      work_dir: ./tests/standalone-mounted-disk
      utility_test: true
      create_backend: true
      pull_request_repo_name: ${{ github.event.client_payload.github.payload.repository.full_name }}
      pull_request_ref: ${{ github.event.client_payload.pull_request.head.sha }}
      pull_request_comment_id: ${{ github.event.client_payload.github.payload.comment.id }}
      TFC_token_secret_name: UTILITY_GOOGLE_STANDALONE_MOUNTED_DISK_TFC_TOKEN
      TFC_workspace_substitution_pattern: s/google-standalone-mounted-disk/utility-google-standalone-mounted-disk/
      TFC_workspace: utility-google-standalone-mounted-disk

  aws_active_active_rhel7_proxy:
    name: Destroy resources from AWS Active-Active RHEL7 Proxy
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'aws-active-active-rhel7-proxy') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-aws')}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      WORK_DIR_PATH: ./tests/active-active-rhel7-proxy
      AWS_DEFAULT_REGION: us-east-2
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

      # Checkout the branch of the AWS TFE module to be used to test changes
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: hashicorp/terraform-aws-terraform-enterprise

      - name: Set Terraform Backend to TFC Workspace
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: |
          sed --in-place 's/terraform {/terraform {\n\
            backend "remote" {\n\
              organization = "terraform-enterprise-modules-test"\n\
              workspaces {\n\
                name = "utility-aws-active-active-rhel7-proxy"\n\
              }\n\
            }\n/' versions.tf

      - name: Set Terraform Utility Module Sources
        working-directory: ${{ env.WORK_DIR_PATH }}
        env:
          SHA: ${{ github.event.client_payload.pull_request.head.sha }}
        run: |
          sed --in-place "s/?ref=main/?ref=$SHA/" ../../main.tf
          sed --in-place "s/?ref=main/?ref=$SHA/" ../../fixtures/test_proxy/main.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_hostname: 'app.terraform.io'
          cli_config_credentials_token: ${{ secrets.UTILITY_AWS_ACTIVE_ACTIVE_RHEL7_PROXY_TFC_TOKEN }}
          terraform_version: 1.1.5
          terraform_wrapper: true

      - name: Terraform Init
        id: init
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform init -input=false -no-color

      - name: Terraform Destroy
        id: destroy
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform destroy -auto-approve -input=false -no-color

      - name: Update comment
        if: ${{ always() }}
        uses: peter-evans/create-or-update-comment@c9fcb64660bc90ec1cc535646af190c992007c32
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
            ${{ format('### {0} Terraform AWS Active-Active RHEL7 Proxy Destruction Report', job.status == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format(':link: [Action Summary Page]({0})', steps.vars.outputs.run-url) }}

            ${{ format('- {0} Terraform Init', steps.init.outcome == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format('- {0} Terraform Destroy', steps.destroy.outcome == 'success' && ':white_check_mark:' || ':x:') }}

  aws_private_active_active:
    name: Destroy resources from AWS Private Active-Active
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'aws-private-active-active') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-aws')}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      WORK_DIR_PATH: ./tests/private-active-active
      AWS_DEFAULT_REGION: us-east-2
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

      # Checkout the branch of the AWS TFE module to be used to test changes
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: hashicorp/terraform-aws-terraform-enterprise

      - name: Update Terraform Backend to TFC Workspace for Utility Module
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: |
          sed --in-place 's/aws-private-active-active/utility-aws-private-active-active/' versions.tf

      - name: Set Terraform Utility Module Sources
        working-directory: ${{ env.WORK_DIR_PATH }}
        env:
          SHA: ${{ github.event.client_payload.pull_request.head.sha }}
        run: |
          sed --in-place "s/?ref=main/?ref=$SHA/" ../../main.tf
          sed --in-place "s/?ref=main/?ref=$SHA/" ../../fixtures/test_proxy/main.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_hostname: 'app.terraform.io'
          cli_config_credentials_token: ${{ secrets.UTILITY_AWS_PRIVATE_ACTIVE_ACTIVE_TFC_TOKEN }}
          terraform_version: 1.1.5
          terraform_wrapper: true

      - name: Terraform Init
        id: init
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform init -input=false -no-color

      - name: Terraform Destroy
        id: destroy
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform destroy -auto-approve -input=false -no-color

      - name: Update comment
        if: ${{ always() }}
        uses: peter-evans/create-or-update-comment@c9fcb64660bc90ec1cc535646af190c992007c32
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
            ${{ format('### {0} Terraform AWS Private Active-Active Destruction Report', job.status == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format(':link: [Action Summary Page]({0})', steps.vars.outputs.run-url) }}

            ${{ format('- {0} Terraform Init', steps.init.outcome == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format('- {0} Terraform Destroy', steps.destroy.outcome == 'success' && ':white_check_mark:' || ':x:') }}

  aws_private_tcp_active_active:
    name: Destroy resources from AWS Private TCP Active-Active
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'aws-private-tcp-active-active') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-aws')}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      WORK_DIR_PATH: ./tests/private-tcp-active-active
      AWS_DEFAULT_REGION: us-east-2
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

      # Checkout the branch of the AWS TFE module to be used to test changes
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: hashicorp/terraform-aws-terraform-enterprise

      - name: Update Terraform Backend to TFC Workspace for Utility Module
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: |
          sed --in-place 's/aws-private-tcp-active-active/utility-aws-private-tcp-active-active/' versions.tf 

      - name: Set Terraform Utility Module Sources
        working-directory: ${{ env.WORK_DIR_PATH }}
        env:
          SHA: ${{ github.event.client_payload.pull_request.head.sha }}
        run: |
          sed --in-place "s/?ref=main/?ref=$SHA/" ../../main.tf
          sed --in-place "s/?ref=main/?ref=$SHA/" ../../fixtures/test_proxy/main.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_hostname: 'app.terraform.io'
          cli_config_credentials_token: ${{ secrets.UTILITY_AWS_PRIVATE_TCP_ACTIVE_ACTIVE_TFC_TOKEN }}
          terraform_version: 1.1.5
          terraform_wrapper: true

      - name: Terraform Init
        id: init
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform init -input=false -no-color

      - name: Terraform Destroy
        id: destroy
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform destroy -auto-approve -input=false -no-color

      - name: Update comment
        if: ${{ always() }}
        uses: peter-evans/create-or-update-comment@c9fcb64660bc90ec1cc535646af190c992007c32
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
            ${{ format('### {0} Terraform AWS Private TCP Active-Active Destruction Report', job.status == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format(':link: [Action Summary Page]({0})', steps.vars.outputs.run-url) }}

            ${{ format('- {0} Terraform Init', steps.init.outcome == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format('- {0} Terraform Destroy', steps.destroy.outcome == 'success' && ':white_check_mark:' || ':x:') }}

  aws_public_active_active:
    name: Destroy resources from AWS Public Active-Active
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'aws-public-active-active') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-aws')}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      WORK_DIR_PATH: ./tests/public-active-active
      AWS_DEFAULT_REGION: us-east-2
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

      # Checkout the branch of the AWS TFE module to be used to test changes
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: hashicorp/terraform-aws-terraform-enterprise

      - name: Update Terraform Backend to TFC Workspace for Utility Module
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: |
          sed --in-place 's/aws-public-active-active/utility-aws-public-active-active/' versions.tf

      - name: Set Terraform Utility Module Sources
        working-directory: ${{ env.WORK_DIR_PATH }}
        env:
          SHA: ${{ github.event.client_payload.pull_request.head.sha }}
        run: |
          sed --in-place "s/?ref=main/?ref=$SHA/" ../../main.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_hostname: 'app.terraform.io'
          cli_config_credentials_token: ${{ secrets.UTILITY_AWS_PUBLIC_ACTIVE_ACTIVE_TFC_TOKEN }}
          terraform_version: 1.1.5
          terraform_wrapper: true

      - name: Terraform Init
        id: init
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform init -input=false -no-color

      - name: Terraform Destroy
        id: destroy
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform destroy -auto-approve -input=false -no-color

      - name: Update comment
        if: ${{ always() }}
        uses: peter-evans/create-or-update-comment@c9fcb64660bc90ec1cc535646af190c992007c32
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
            ${{ format('### {0} Terraform AWS Public Active-Active Destruction Report', job.status == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format(':link: [Action Summary Page]({0})', steps.vars.outputs.run-url) }}

            ${{ format('- {0} Terraform Init', steps.init.outcome == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format('- {0} Terraform Destroy', steps.destroy.outcome == 'success' && ':white_check_mark:' || ':x:') }}

  aws_standalone_vault:
    name: Destroy resources from AWS Standalone Vault
    if: ${{ contains(github.event.client_payload.slash_command.args.unnamed.all, 'all') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'aws-standalone-vault') || contains(github.event.client_payload.slash_command.args.unnamed.all, 'full-aws')}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      WORK_DIR_PATH: ./tests/standalone-vault
      AWS_DEFAULT_REGION: us-east-2
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

      # Checkout the branch of the AWS TFE module to be used to test changes
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: hashicorp/terraform-aws-terraform-enterprise

      - name: Set Terraform Backend to TFC Workspace
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: |
          sed --in-place 's/terraform {/terraform {\n\
            backend "remote" {\n\
              organization = "terraform-enterprise-modules-test"\n\
              workspaces {\n\
                name = "utility-aws-standalone-vault"\n\
              }\n\
            }\n/' versions.tf

      - name: Set Terraform Utility Module Sources
        working-directory: ${{ env.WORK_DIR_PATH }}
        env:
          SHA: ${{ github.event.client_payload.pull_request.head.sha }}
        run: |
          sed --in-place "s/?ref=main/?ref=$SHA/" ../../main.tf
          sed --in-place "s/?ref=main/?ref=$SHA/" main.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_hostname: 'app.terraform.io'
          cli_config_credentials_token: ${{ secrets.UTILITY_AWS_STANDALONE_VAULT_TFC_TOKEN }}
          terraform_version: 1.1.5
          terraform_wrapper: true

      - name: Terraform Init
        id: init
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform init -input=false -no-color

      - name: Terraform Destroy
        id: destroy
        working-directory: ${{ env.WORK_DIR_PATH }}
        run: terraform destroy -auto-approve -input=false -no-color

      - name: Update comment
        if: ${{ always() }}
        uses: peter-evans/create-or-update-comment@c9fcb64660bc90ec1cc535646af190c992007c32
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
            ${{ format('### {0} Terraform AWS Standalone Vault Destruction Report', job.status == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format(':link: [Action Summary Page]({0})', steps.vars.outputs.run-url) }}

            ${{ format('- {0} Terraform Init', steps.init.outcome == 'success' && ':white_check_mark:' || ':x:') }}

            ${{ format('- {0} Terraform Destroy', steps.destroy.outcome == 'success' && ':white_check_mark:' || ':x:') }}
